package fr.ecombio.model;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;

/**
 * <p>
 * Gestion de la creation d'une facture en pdf
 * </p>
 *
 * @see SendEmail
 * @see ValidationCommande
 * @see Panier
 */
public class CreateFacture {
	String dir;
	private static String FILE;

	private static Font catFont;
	private static Font titleFont;
	private static Font smallBold;

	public CreateFacture() {
		dir = System.getProperty("user.dir");
		FILE = dir+"/Facture.pdf";
		System.out.println(FILE);
		titleFont = new Font(Font.FontFamily.TIMES_ROMAN, 22,
				Font.BOLD);
		titleFont.setColor(BaseColor.BLACK);
		catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
				Font.BOLD);
		catFont.setColor(BaseColor.DARK_GRAY);
		smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
				Font.BOLD);

		smallBold.setColor(BaseColor.GRAY);
	}


	/**
	 * Methode de retour de la facture en pdf
	 * @param infos infos sur la commande
	 * @param panier panier associe
	 * @return nom du fichier
	 * @throws FileNotFoundException
	 * @throws DocumentException
	 * 
	 * @see ValidationCommande
	 * @see Panier
	 */
	public String getFile(ValidationCommande infos, Panier panier) throws FileNotFoundException, DocumentException {
		Document document = new Document();
		PdfWriter.getInstance(document, new FileOutputStream(FILE));
		document.open();
		addMetaData(document);
		addTitlePage(document, infos);
		addContent(document, panier);
		document.close();
		return FILE;
	}


	// iText allows to add metadata to the PDF which can be viewed in your Adobe
	// Reader
	// under File -> Properties
	private static void addMetaData(Document document) {
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
		Date date = new Date();
		document.addTitle("Facture du "+dateFormat.format(date));
	}


	private static void addTitlePage(Document document, ValidationCommande infos)
			throws DocumentException {
		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
		Date date = new Date();
		Paragraph p1 = new Paragraph("Facture n. "+CreateFacture.getNum()+" du "+dateFormat.format(date), titleFont);
		p1.setAlignment(Element.ALIGN_CENTER);
		preface.add(p1);

		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		Paragraph p = new Paragraph("Bio To Be Alive",catFont);
		preface.add(p);
		p = new Paragraph("15 Chemin de Taillat, 38240 Meylan\nSIRET : 123 456 789 12345, NAF : 4711B\nSARL au capital de 55 000€",smallBold);
		p.setIndentationLeft(100);
		p.setAlignment(Element.ALIGN_LEFT);
		preface.add(p);
		addEmptyLine(preface, 1);
		p = new Paragraph("Vos informations :",catFont);
		preface.add(p);
		p = new Paragraph(
				String.format("Nom : %s %s\nMail : %s\nAdresse de livraison : %s, %s %s",infos.getCommandInfo().getNom(),
						infos.getCommandInfo().getPrenom(),
						infos.getCommandInfo().getMail(),
						infos.getCommandInfo().getAdresse(),
						infos.getCommandInfo().getCp(),
						infos.getCommandInfo().getVille()),
				smallBold);
		p.setIndentationLeft(100);
		p.setAlignment(Element.ALIGN_LEFT);
		preface.add(p);
		addEmptyLine(preface, 1);
		document.add(preface);
	}

	private static void addContent(Document document, Panier panier) throws DocumentException {
		Anchor anchor = new Anchor("Vos Produits :", catFont);
		anchor.setName("Vos Produits :\n");

		// Second parameter is the number of the chapter
		Paragraph catPart = new Paragraph(anchor);

		// add a table
		createTable(catPart, panier);

		addEmptyLine(catPart, 1);
		// now add all this to the document
		document.add(catPart);

		
		// Next section
		anchor = new Anchor();
		// Next section
		Double total = panier.getTotal();
		document.add(getTable("Total  HT",":",total+" €", catFont));
		Double tva = Math.round(total*5.5) / 100.0;
		document.add(getTable("TVA    5.5%",":",tva+" €", smallBold));
		Double tt =  Math.round((total+tva)*100.0) / 100.0;
		document.add(getTable("Total  TTC",":",tt+" €", catFont));

	}
	
	private static Element getTable(String string, String string2, String string3, Font catFont2) throws DocumentException {
		PdfPTable table = new PdfPTable(4);
		table.setHorizontalAlignment(Element.ALIGN_RIGHT);
		table.setTotalWidth(255);
		float[] widths = new float[] { 120f, 10f, 70f, 55f};
		table.setWidths(widths);
		table.setLockedWidth(true);
		//table.setWidthPercentage(100);
		table.addCell(getCell(string, PdfPCell.ALIGN_LEFT, catFont2));
		table.addCell(getCell(string2, PdfPCell.ALIGN_CENTER, catFont2));
		table.addCell(getCell(string3, PdfPCell.ALIGN_RIGHT, catFont2));
		table.addCell(getCell("", PdfPCell.ALIGN_RIGHT, catFont2));
		return table;
	}

	public static PdfPCell getCell(String text, int alignment, Font catFont2) {
	    PdfPCell cell = new PdfPCell(new Phrase(text,catFont2));
	    cell.setPadding(0);
	    cell.setHorizontalAlignment(alignment);
	    cell.setBorder(PdfPCell.NO_BORDER);
	    return cell;
	}
	
	private static void createTable(Paragraph subCatPart, Panier panier)
			throws DocumentException {
		PdfPTable table = new PdfPTable(3);
		table.setTotalWidth(450);
		float[] widths = new float[] {240f, 105f, 105f};
		table.setWidths(widths);
		table.setLockedWidth(true);

		PdfPCell c1 = new PdfPCell(new Phrase(""));
		c1.setVerticalAlignment(Element.ALIGN_TOP);
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    c1.setBorder(PdfPCell.NO_BORDER);
	    c1.setBackgroundColor(BaseColor.WHITE);
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase("Quantité"));
		c1.setVerticalAlignment(Element.ALIGN_TOP);
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    c1.setBorder(PdfPCell.NO_BORDER);
	    c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase("Prix à l'unité (€)"));
		c1.setVerticalAlignment(Element.ALIGN_TOP);
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
	    c1.setBorder(PdfPCell.NO_BORDER);
	    c1.setBackgroundColor(BaseColor.LIGHT_GRAY);
		table.addCell(c1);
		table.setHeaderRows(1);
		int k = 0;
		Iterator<Article> i=panier.getArticles().iterator();
		while(i.hasNext()) // tant qu'on a un suivant
		{
			k++;
			BaseColor color = BaseColor.WHITE;
			if (k == 2){
				color = new BaseColor(0.9f,0.9f,0.9f);
				k=k-2;
			}
			Article a = i.next();
			c1 = new PdfPCell(new Phrase(a.getProduit().getName() +" "+a.getProduit().getVariete() ));
		    c1.setBackgroundColor(color);
			c1.setVerticalAlignment(Element.ALIGN_CENTER);
		    c1.setBorder(PdfPCell.NO_BORDER);
			table.addCell(c1);
			c1 = new PdfPCell(new Phrase(Integer.toString(a.getQuotite())));
			c1.setBackgroundColor(color);
			c1.setVerticalAlignment(Element.ALIGN_CENTER);
			c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    c1.setBorder(PdfPCell.NO_BORDER);
			table.addCell(c1);
			c1 = new PdfPCell(new Phrase(Double.toString(Math.round(a.getProduit().getPrix() * 100.0) / 100.0)));
			c1.setBackgroundColor(color);
			c1.setVerticalAlignment(Element.ALIGN_CENTER);
			c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		    c1.setBorder(PdfPCell.NO_BORDER);
			table.addCell(c1);
		}
		subCatPart.add(table);

	}

	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}
	
	private static Long sequence = 54L;
	@SuppressWarnings("deprecation")
	private static String getNum() {
		// TODO Auto-generated method stub
		sequence++;
		DateFormat df = new SimpleDateFormat("yyyy");
		return df.format(new Date())+"_"+Long.toString(sequence);
	}
}