package fr.ecombio.model;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Iterator;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;


public class CreateFacture {
	private static String FILE = "/home/apollinaire/Documents/UJF/M2/ECOM/Facture.pdf";
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
			Font.BOLD);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
			Font.BOLD);
	


	public String getFile(ValidationCommande infos, Panier panier) throws FileNotFoundException, DocumentException {
		Document document = new Document();
		PdfWriter.getInstance(document, new FileOutputStream(FILE));
		document.open();
		addMetaData(document);
		addTitlePage(document, infos);
		addContent(document, panier);
		document.close();
		return FILE;
	}


	// iText allows to add metadata to the PDF which can be viewed in your Adobe
	// Reader
	// under File -> Properties
	private static void addMetaData(Document document) {
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
		Date date = new Date();
		document.addTitle("Facture du "+dateFormat.format(date));
	}

	private static void addTitlePage(Document document, ValidationCommande infos)
			throws DocumentException {
		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
		Date date = new Date();
		preface.add(new Paragraph("Facture du "+dateFormat.format(date), catFont));

		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		preface.add(new Paragraph(
				"BioToBeAlive\n15 Chemin de Taillat\n38240 Meylan",smallBold));
		addEmptyLine(preface, 3);
		Paragraph p = new Paragraph(
				String.format("Vos informations :\nNom : %s %s\nMail : %s\nVille : %s",infos.getCommandInfo().getNom(),
						infos.getCommandInfo().getPrenom(),
						infos.getCommandInfo().getMail(),
						infos.getCommandInfo().getVille()),
smallBold);
		preface.add(p);

		document.add(preface);
	}

	private static void addContent(Document document, Panier panier) throws DocumentException {
		Anchor anchor = new Anchor("Vos Produits :", catFont);
		anchor.setName("Vos Produits :\n");

		// Second parameter is the number of the chapter
		Paragraph catPart = new Paragraph(anchor);

		// add a table
		createTable(catPart, panier);

		// now add all this to the document
		document.add(catPart);

		// Next section
		anchor = new Anchor("Total :", catFont);
		anchor.setName("Total : ");

		catPart = new Paragraph(anchor);
		catPart.add(new Paragraph(panier.getTotal()+" €"));

		// now add all this to the document
		document.add(catPart);

	}

	private static void createTable(Paragraph subCatPart, Panier panier)
			throws BadElementException {
		PdfPTable table = new PdfPTable(3);

		// t.setBorderColor(BaseColor.GRAY);
		// t.setPadding(4);
		// t.setSpacing(4);
		// t.setBorderWidth(1);

		PdfPCell c1 = new PdfPCell(new Phrase("Produit"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase("Quantité"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);

		c1 = new PdfPCell(new Phrase("Prix à l'unité (€)"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		table.setHeaderRows(1);
		double retour = 0;
		Iterator<Article> i=panier.getArticles().iterator();
		while(i.hasNext()) // tant qu'on a un suivant
		{
			Article a = i.next();
			table.addCell(a.getProduit().getName() +" "+a.getProduit().getVariete() );
			table.addCell(Integer.toString(a.getQuotite()));
			table.addCell(Double.toString(Math.round(a.getProduit().getPrix() * 100.0) / 100.0));
		}
		subCatPart.add(table);

	}

	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}
}